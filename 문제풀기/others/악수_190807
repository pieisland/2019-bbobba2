#include<cstdio>
#include<iostream>
#include<vector>
#include<algorithm>
#include<string>
#include<cstring>
#include<queue>
using namespace std;

/*
2019.08.07.수.
8방향으로 악수하는 문제.
악수를 최대 몇 회 할 수 있는지 구하는데
여기서 주의할 게..
하하. 얘가 들어갈 자리가 없을 수도 있다는 거였다.
그래서 shake 함수를 먼저 한 번 돌려야 됨.
*/

int r, c;
char arr[50][50];
int check[50][50];
int dir[8][2] = { {1, 0}, {-1, 0}, {0, 1}, {0, -1}, {1, 1}, {1, -1}, {-1, 1}, {-1, -1} };
int pos[50][2];
int cnt;
int ans = 0;

bool isinside(int y, int x)
{
	if (y >= 0 && y < r&&x >= 0 && x < c)
		return true;
	else
		return false;
}

//악수의 횟수를 셉니다.
void shake()
{
	int aa = 0;
	for(int i=0;i<r;i++)
		for (int j = 0; j < c; j++)
		{
			if (arr[i][j] == 'o')
			{
				for (int k = 0; k < 8; k++)
				{
					int ny = i + dir[k][0];
					int nx = j + dir[k][1];
					if (isinside(ny, nx) && arr[ny][nx] == 'o')
						aa++;
				}
			}
		}
	aa /= 2;
	if (aa > ans) ans = aa;
}

int main()
{
	cin >> r >> c;
	for (int i = 0; i < r; i++)
		for (int j = 0; j < c; j++)
		{
			cin >> arr[i][j];
			if (arr[i][j] == '.')
			{
				pos[cnt][0] = i;
				pos[cnt][1] = j;
				cnt++;
			}
		}

	//모든 경우를 다 해보면 되지 않을까..
	shake();//어휴 안하고도 해봐야되겠네..

	for (int i = 0; i < cnt; i++)
	{
		int y = pos[i][0];
		int x = pos[i][1];

		arr[y][x] = 'o';
		shake();
		arr[y][x] = '.';
	}

	cout << ans << endl;

	return 0;
}
