#include<iostream>
using namespace std;

int n;
int d[1000001];

//bottom up 방식으로 푼다면
int dp2(int num)
{
	d[1] = 0;
	for (int i = 2; i <= num; i++)
	{
		d[i] = d[i - 1] + 1;
		if (i % 2 == 0 && d[i] > d[i / 2] + 1)
		{
			d[i] = d[i / 2] + 1;
		}
		if (i % 3 == 0 && d[i] > d[i / 3] + 1)
			d[i] = d[i / 3] + 1;
	}

	return d[num];
}

int dp(int num)
{
	if (num == 1) return 0;
	if (d[num] > 0) return d[num];

	d[num] = dp(num-1) + 1;

	if (num % 3 == 0)
	{
		if (dp(num / 3) + 1 < d[num])
			d[num] = dp(num / 3) + 1;
	}
	if (num % 2 == 0)
	{
		if (dp(num / 2) + 1 < d[num])
			d[num] = dp(num / 2) + 1;
	}

	return d[num];
}

int main()
{
	cin >> n;

	cout<<dp2(n)<<endl;
	//cout<< dp(n) <<endl;

	return 0;
}
