#include<cstdio>
#include<iostream>
#include<vector>
#include<algorithm>
#include<string>
#include<cstring>
#include<queue>
using namespace std;

/*
2019.07.04.목.
한 줄로 서기(1138). greedy.
키가 작은 사람부터 왼 쪽에 몇 명의 키 큰 사람이 있었는지를 알려준다.
모두 비어있다고 가정하고 작은 사람부터 위치를 찾는다.
비어 있는 곳은 키가 큰 사람이 있다고 가정하고 건너가며 자리를 찾는다.
자리를 찾은 경우 저장을 해서 다른 사람이 있지 못하게 한다.
중요한 점은 키가 작은 사람부터 했기 때문에 그 뒤에 하는 사람들은
작은 사람보다 커서 어떤 위치에 이미 사람이 앉아 있더라도 키가 큰 사람으로 카운팅이 되지 않는다.
ㅎ.ㅎ..
*/

int p[10]; //사람들이 섰던 위치

int main(){

	int n; //사람 수
	cin>>n;

	//n명의 사람들에 대해
	for(int i=0;i<n;i++)
	{
		int left; //몇 명의 키 큰 사람들이 앞에 있었는가
		cin>>left;
		for(int j=0;j<n;j++) //left를 감소시켜가며 자리를 찾는다.
		{
			if(left==0&&p[j]==0)//p[j]값이 0이 아니면, 자리가 정해진 것. 그런데 키가 작은 사람부터 자리를 정했기 때문에 자리를 차지하고 있는 사람이 현재 사람보다 키가 클 수는 없다.
			{
				//키 큰 사람들의 수를 충족하고 비어있는 자리라면
				p[j]=i+1;//키가 i+1인 사람이 j번째 위치에 서있다.
				break;
			}
			else if(p[j]==0) //아직 자리가 정해지지 않은 경우에만 left 값을 감소시킨다.
				left--;
			/*else if(left==0)//left는 0인데 아직 자리를 못 찾았으면 찾을 때까지 건너간다.
			{
				continue;
			}
			else//찾아가기.
				left--; //아 이게.. 정해진 자리에서도 left를 줄이니까 잘못된 결과가 나오는 거구나.
			*/
		}
	}

	//결과 출력
	for(int i=0;i<n;i++)
		cout<<p[i]<<" ";
	cout<<endl;

	return 0;
}
