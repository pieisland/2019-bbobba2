#include <string>
#include <vector>
#include <queue>

using namespace std;

//int mm = 20000+1;
int graph[20001][20001];
int dist[20001];

int solution(int n, vector<vector<int>> edge) {
    int answer = 0;
    
    for(int i=0;i<edge.size();i++)
    {
        int a=edge[i][0];
        int b=edge[i][1];
        graph[a][b]=1;
        graph[b][a]=1;
    }
    
    queue<int> q;
    q.push(1);
    
    while(!q.empty())
    {
        int num=q.front();
        q.pop();
        for(int i=2;i<=n;i++)
        {
            if(num==i) continue;
            if(graph[num][i]==1)
            {
                if(dist[i]!=0) continue;
                dist[i]=dist[num]+1;
                q.push(i);
            }
        }
    }
    
    int maxval=0;
    for(int i=2;i<=n;i++)
        if(dist[i]>maxval) maxval=dist[i];
    
    for(int i=2;i<=n;i++)
        if(dist[i]==maxval) answer++;
    
    return answer;
}
