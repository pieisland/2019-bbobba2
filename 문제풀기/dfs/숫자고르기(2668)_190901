#include<cstdio>
#include<iostream>
#include<vector>
#include<algorithm>
#include<string>
#include<cstring>
#include<queue>
using namespace std;

/*
19.09.01.일.
나는 왜 쉬운 문제도 못 푸는 걸까.
이거는 쉬운 사이클 문제였다.
문제를 보고 이게 사이클 문제인지를 파악하지 못해서
사실 뭐야 이게 싶었는데 사이클이라고 하네.
정말 내 자신이 점점 싫어지고 있는 부분이죠.

visit은 방문을 했는지의 여부인데.
내가 기껏해서 간 애가 방문한 애라면
start와 같은 경우는 넣어주면 되고 아니면 뭐.
아니다.

방문 안했으면 일단 현재 방문했다고 해 준 다음에
다음 애를 보내주면 된다. 당연히 start는 동일하고.

갔던 거를 다시 가도 되는 건 이게 그냥 n이 작아서 그럼.

결국 사이클 문제는, 방문했는지의 여부를 보는 게 중요한 것 같고.
다음으로 가는 숫자를 매개변수로 잘 넘겨주면 되는 것 같다.

시작 수랑 다음으로 가는 거랑 넘겨준다.
처음에는 그냥 둘 다 같은 거 넘겨줬고.

모든 사이클 문제가 이렇지는 않겠지만 그래도 알고 있으라고.
*/

int n;
int nums[101];
int visit[101];
vector<int> ans;

void dfs(int start, int cur)
{
	//나 방문한 적 있으면
	if (visit[cur])
	{
		if (cur == start)
			ans.push_back(start);
	}
	else
	{
		visit[cur] = 1;
		dfs(start, nums[cur]);
	}
}

int main()
{
	cin >> n;
	for (int i = 1; i <= n; i++)
	{
		cin >> nums[i];
	}

	for (int i = 1; i <= n; i++)
	{
		dfs(i, i);
		memset(visit, 0, sizeof(visit));
	}

	//순서대로 하기때문에 어차피 순서대로 되구나.
	cout << ans.size() << endl;
	for (int i = 0; i < ans.size(); i++)
		cout << ans[i] << endl;

	return 0;
}
