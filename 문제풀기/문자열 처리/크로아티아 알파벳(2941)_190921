#include <string>
#include <vector>
#include <iostream>
#include <queue>
#include <stdio.h>
#include <cstring> //memset 사용을 위함
#include <math.h> //pow 사용을 위함

using namespace std;

/*
190921 토요일
이 문제는 그냥. 그냥 푸는 문제인데..^.^
여기서 알게된 건

1. 문자열 인덱스 넘어가도 문제 안 생김.
2. for문에서 i를 증가시켜도 그게 반영이 됨.

어렵지도 않은 문제를. 오랫동안. 풀고. 고민하다. 시간이. 가네. ^.^
*/

int main()
{
	string s;
	cin >> s;

	int ans = 0;
	//int i = 0;

	//이거 그냥 넘어가는 거 생각할 필요도 없는 거래..
	//뭔가 되게 화난다. 이게 머임..;;

	for (int i = 0; i < s.size(); i++)
	{
		if (s[i] == 'c')
		{
			if (s[i + 1] == '=' || s[i + 1] == '-')
			{
				i++; //근데 이게 되구나.. 그러면 i가 증가된 거에 맞췅서 되는거ㅣㅇㅁ..?
				//ㄹㅇ 신기하다
			}
		}
		else if (s[i] == 'd')
		{
			if (s[i + 1] == '-')
				i++;
			else if (s[i + 1] == 'z' && s[i + 2] == '=')
				i += 2;
		}
		else if (s[i] == 'l' || s[i] == 'n') {
			if (s[i + 1] == 'j')
				i++;
		}
		else if (s[i] == 's')
		{
			if (s[i + 1] == '=') i++;
		}
		else if (s[i] == 'z')
		{
			if (s[i + 1] == '=')
				i++;
		}
		ans++;
	}

	/*while (i <= s.size()-1)
	{
		char c = s[i];
		if (c == 'c')
		{
			if (i + 1 <= s.size() - 1)
			{
				if (s[i + 1] == '=' || s[i + 1] == '-')
				{
					ans++;
					i += 2;
				}
				else
				{
					ans++;
					i += 1;
				}
			}
		}
		else if (c == 'd')
		{
			if (i + 1 <= s.size() - 1)
			{
				if (s[i + 1] == '-')
				{
					ans++;
					i += 2;
				}
				else
				{
					ans++;
					i += 1;
				}
			}
			if (i + 2 <= s.size() - 1)
			{
				if (s[i + 1] == 'z' && s[i + 2] == '=')
				{
					ans++;
					i += 3;
				}
				else
				{
					ans++;
					i += 1;
				}
			}
		}
		else if (c == 'l' || c=='n')
		{
			if (i + 1 <= s.size() - 1)
			{
				if (s[i + 1] == 'j')
				{
					ans++;
					i += 2;
				}
				else
				{
					ans++;
					i += 1;
				}
			}
		}
		else if (c == 's' || c == 'z')
		{
			if (i + 1 <= s.size() - 1)
			{
				if (s[i + 1] == '=')
				{
					ans++;
					i += 2;
				}
				else
				{
					ans++;
					i += 1;
				}
			}
		}
		else
		{
			cout << "뭐가 문젠데..." << endl;
			ans++;
			i += 1;
		}
	}*/

	cout << ans << endl;

	return 0;
}
