#include<cstdio>
#include<iostream>
#include<vector>
#include<algorithm>
#include<string>
#include<cstring>
#include<queue>
using namespace std;

/*
19.09.02.월.
연속부분최대곱이라는 문제였다.
dp문제인데, 백준 문제에서 연속합 이라는 문제랑 똑같다.
dp를 연속적으로 하는 게 있고 불연속적으로선택해서 하는 그런 게 있는 것 같다.
연속의 경우는
이전의 최대에(d[i-1]) 나를 연속적으로 선택한 경우와
나만 선택한 경우(그래서 연속을 끊어버리는 경우) 를 생각한다.
어쩄든 큰 값을 가지고 있어야 그 뒤에 있는 애들도
큰 값을 선택할 수 있게 된단 말이지.
1.3 의 경우는 아마도 앞에 있는 것들의 곱이
나보다 작았기 때문에 1.3을 가지고 있을 것이고
0, 9는 나보다는 0.9에 1.3 곱한 게 크니까 갖고 있었겠지
1.4의 경우는 이전 값에 나를 곱한 게 나보다 크니까 했겠지.
그래서 뭔가 계속 갱신이 되고
d[]에서 제일 큰 값을 찾으면 되는 문제였다.

이걸. 좀 생각을 내가 할 수 있을까.
*/

int n;
double num[10000];
double d[10000];

int main()
{
	cin >> n;
	for (int i = 0; i < n; i++)
		cin >> num[i];

	d[0] = num[0];
	for (int i = 1; i < n; i++) //진짜 이게 끝이라고..?
		d[i] = max(d[i - 1] * num[i], num[i]);

	double ans = 0;
	for (int i = 0; i < n; i++)
		if (ans < d[i]) ans = d[i];

	printf("%.3f\n", ans);
	//cout << ans << endl;

	return 0;
}
