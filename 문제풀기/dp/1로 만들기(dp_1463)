#include<cstdio>
#include<iostream>
#include<vector>
#include<algorithm>
#include<string>
#include<cstring>
#include<queue>
using namespace std;

/*
2019.07.04.목.
1로 만들기(1463)
블로그 참고해서 풀었음.
*/

int n;
int p[1000001];

int dp(int num)
{
	//이미 1이기 때문에 할 연산이 없음.
	if (num == 1)
		return 0;
	
	//1이 아니라면 최솟값을 찾기. 1에서 시작해서 n을 가장 적은 경우로 만들 수 있는 방법이라고 생각이 되는 듯...
	for (int i = 2; i <= num; i++)
	{
		//i 수를 만드는 방법은 처음에 쉽게 생각하면 i-1 수에 1을 더하는 방법이므로
		//한 번의 단계만 추가
		p[i] = p[i - 1] + 1;

		//2로 나눠질 수 있는 수라면, i/2를 만드는 방법에 2를 곱하는 연산만 한 번 더한 경우가 더 빨리 i 수를 만들 수도 있음
		if (i % 2 == 0) //위에서 구했던 p[i]를 만드는 방법과 비교해서 작은 것을 취한다.
			p[i] = min(p[i], p[i / 2] + 1);

		//3으로 나눠져도 마찬가지.
		if (i % 3 == 0)
			p[i] = min(p[i], p[i / 3] + 1);
	}
	return p[n];
}

int main() {
	cin.tie(NULL);
	cin >> n;

	cout << dp(n) << '\n';

	return 0;
}
