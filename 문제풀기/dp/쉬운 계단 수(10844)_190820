#include<cstdio>
#include<iostream>
#include<vector>
#include<algorithm>
#include<string>
#include<cstring>
using namespace std;

/*
2019.08.20.화.

*/

long long int d[101][101];
int mod = 1000000000;

void dp(int num)
{
	for (int i = 1; i <= num; i++)
	{
		for (int j = 0; j <= 9; j++)
		{
			if (i == 1) {
				d[i][j] = 1;
			}
			else {
				if (j == 0)
					d[i][1] = d[i - 1][2];
				else if (j == 9)
					d[i][9] = d[i - 1][8];
				else
					d[i][j] = d[i - 1][j - 1] + d[i - 1][j + 1];
			}
			
		}
	}
}

int main()
{
	int n;
	cin >> n;

	//1의 경우 0부터 시작을 못하기 때문에 0에는 1넣어주면 안된다.
	for (int i = 1; i <= 9; i++)
		d[1][i] = 1;

	//다음 수부터 좀 신경을 써줘야 되는건데.
	for (int i = 2; i <= n; i++)
	{
		//저렇게 범위나누는 건 어떻게 생각해??
		for (int j = 0; j <= 9; j++)
		{
			//d[i][j] = 0;
			if (j - 1 >= 0) d[i][j] += d[i - 1][j - 1];
			//n 계단수에서 마지막 수가 j일 때의 경우 아닌가요.
			if (j + 1 <= 9) d[i][j] += d[i - 1][j + 1];
			//이해가 가면서도 나는 못짜겠는 신비함.
			d[i][j] %= mod;

			/*if (j == 1)
			{
				d[i][1] = d[i - 1][2];
			}
			else if (j == 9)
				d[i][9] = d[i - 1][8];
			else
			{
				d[i][j] = d[i - 1][j - 1] + d[i - 1][j + 1];
			}*/

			//d[i][j] %= mod;
		}
	}

	long long int ans = 0;
	for (int i = 0; i <= 9; i++)
		ans += d[n][i];

	ans %= mod;
	cout << ans << endl;

	return 0;
}
