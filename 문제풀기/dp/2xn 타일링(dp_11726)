#include<cstdio>
#include<iostream>
#include<vector>
#include<algorithm>
#include<string>
#include<cstring>
#include<queue>
using namespace std;

/*
2019.07.04.목.
2xn 타일링(dp_11726)
*/

int n; //타일의 가로 길이
int d[1001]; //가로 길이가 i인 타일을 만드는 방법의 수

int dp(int num)
{
	if (num == 1) return 1; //가로 길이가 1이면, 2x1 타일 하나로밖에 못 만든다.
	if (num == 2) return 2; //가로 길이가 2이면 2x1 타일 두 개로 만들거나, 1x2 타일 두 개로 만들거나 두 가지 경우.
	if (d[num] != 0) return d[num]; //메모이제이션. 계산 한 것을 다시 계산하지 않도록 한다.

	//1, 2보다 길이가 긴 타일들은
	//num-1의 길이를 가진 타일을 만드는 방법에 2x1 타일을 하나 붙이는 방법 하나에
	//num-2의 길이를 가진 타일을 만드는 방법에 1x2 타일을 두 개 붙이는 방법 하나를 더한 것이다.
	//이 때 2x1 타일을 두 개 붙이는 경우는 dp(num-1)에 포함되는 경우이므로 고려하지 않음
	//num에서 3 이상으로 빼는 값은 num-1, num-2 경우에 포함되므로 따질 필요 없음.
	d[num] = (dp(num - 1) + dp(num - 2))%10007;
	return d[num];
}

int main() {
	cin.tie(NULL);
	cin >> n;

	cout << dp(n) << endl;

	return 0;
}
