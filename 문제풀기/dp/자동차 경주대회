#include<cstdio>
#include<iostream>
#include<vector>
#include<algorithm>
#include<string>
#include<cstring>
#include<queue>
using namespace std;

/*
19.09.03.화.
자동차 경주대회. dp로도 풀 수 있다고 한다.
최소값을 계속 찾아나가는 형태로 되는데
맨 처음에는 큰 값을 넣어줘서 갱신이 될 수 있도록 한다.
이전 위치에서 그 위치로 갈 수 있는 거리가 되고
이전 위치에서 그 정비소를 들러서 걸리는 시간이 지금 위치 값보다 작다면
갱신시켜준다.

말로해서 이해가 될란가 모르겠네요.

아니 근데 이거 진짜 내가 했던 방법으로 풀고싶은데
그걸로는 진짜 안되는 건가요..? ㅠ.ㅠ 이해가 안되는데 ㅋㅋㅋㅋ

꼭 누적값을 이용해야 돼..??
*/

int L;
int N;
int dis[52];
int jung[52];
int d[52];

void initD()
{
	for (int i = 1; i <= N + 1; i++)
		d[i] = 100000000;
}

void dynamic()
{
	initD();

	for (int i = 1; i <= N + 1; i++)
	{
		for (int j = i - 1; j >= 0; j--)
		{
			if (dis[i]-dis[j]<=L) //갈 수 있는 거리이고
			{
				if (d[i] > d[j] + jung[i]) //이전값에서 가는 게 더 적다면 갱신
					d[i] = d[j] + jung[i];
			}
		}
	}
}

int main()
{
	cin >> L;
	cin >> N;
	for (int i = 1; i <= N + 1; i++) {
		cin >> dis[i];
		dis[i] += dis[i - 1];
	}

	for (int i = 1; i <= N; i++)
		cin >> jung[i];

	dynamic();

	cout << d[N+1] << endl;

	return 0;
}
