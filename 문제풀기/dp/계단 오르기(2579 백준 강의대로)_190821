#include<iostream>
using namespace std;

/*
19.08.21.수.
계단 오르기 문제를 2차로 풀기.
그 포도주 시식 문제랑 되게 비슷한 문제인데 나는 꼭 밟아야 한다는 점이 조금 다르다.
그래서 0을 사용하지 않는다(하지만 나는 하나 더 만들기 싫어서 그냥 1을 0으로 썼다.).
d[i][a] 이라면 i번째 계단을 밟았는데 a번 연속으로 밟았을 경우를 말합니다.
*/

int d[301][2];//n번쨰 계단을 1번 연속, 2번 연속으로 밟았을 경우

int main()
{
	int n;
	cin>>n;

	int stair[301]; //계단의 점수
	int ans = 0;

	for(int i=1;i<=n;i++)
		cin>>stair[i];

	//첫번째 계단을 1번 연속으로 밟은 경우니까 그냥 첫번째 계단을 넣어주면 된다.
	d[1][0]=stair[1];

	for(int i=2;i<=n;i++)
	{
		d[i][0] = max(d[i-2][0], d[i-2][1]) + stair[i];
		d[i][1] = d[i-1][0]+stair[i];
	}

	ans = max(d[n][0], d[n][1]);
	cout<<ans<<endl;
	
	return 0;
}
